Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To verify that the application is running, you can:

1. Check the status of the deployment:
   kubectl get deployment {{ include "lwmecps-gym.fullname" . }} --namespace {{ .Release.Namespace }}

2. Check the status of the pods:
   kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "lwmecps-gym.name" . }}"

3. Check the logs:
   kubectl logs --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "lwmecps-gym.name" . }}"

4. Access the API:
   kubectl port-forward --namespace {{ .Release.Namespace }} svc/{{ include "lwmecps-gym.fullname" . }} {{ .Values.service.port }}:{{ .Values.service.port }}

Then you can create a training task using curl:
```bash
curl -X POST "http://localhost:{{ .Values.service.port }}/api/v1/training/tasks" \
     -H "Content-Type: application/json" \
     -d '{
       "name": "Q-Learning Training",
       "description": "Training Q-Learning agent for pod placement",
       "model_type": "q_learning",
       "parameters": {
         "learning_rate": 0.1,
         "discount_factor": 0.95,
         "exploration_rate": 1.0,
         "exploration_decay": 0.995
       },
       "total_episodes": 1000
     }'
```

1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host, $ing := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $ing.tls }}s{{ end }}://{{ $host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "lwmecps-gym.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "lwmecps-gym.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "lwmecps-gym.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0).ip }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ .Chart.Name }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=8010
  echo "Visit http://127.0.0.1:8010 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8010:$CONTAINER_PORT
{{- end }}

2. For more information about the API endpoints, visit:
  http://localhost:{{ .Values.service.port }}/docs 